on:
  push:
    paths:
      - 'version'

name: v2ray-build
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Bazel
        uses: abhinavsingh/setup-bazel@v3

      - name: Set variables
        run: |
          echo "GOLANG=$(wget -qO- https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep 'version' | cut -d\" -f4 | head -1)" >> $GITHUB_ENV
          echo "VERSION=$(cat version | head -1 | tr -d [:space:])" >> $GITHUB_ENV
          echo "GOPATH=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "$(dirname $GITHUB_WORKSPACE)/bin" >> $GITHUB_PATH
          echo "PATH=$GOPATH/bin" >> $GITHUB_PATH
        shell: bash

      - name: Install Golang
        uses: actions/setup-go@v2
        with: 
          go-version: ${{ env.GOLANG }}

      - name: Start Build
        run: |
          git clone -b ${{ env.VERSION }} https://github.com/v2fly/v2ray-core.git && cd v2ray-core
          bazel build --action_env=PATH=$PATH \
          --action_env=GOPATH=$(go env GOPATH) \
          --action_env=GOCACHE=$(go env GOCACHE) \
          --action_env=SPWD=$PWD \
          --spawn_strategy local \
          //release:all

      - name: Prepare
        run: |
          mkdir -p release
          cp v2ray-core/bazel-bin/release/v2ray-* release/

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            ./release/*